/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.form;

import controller.Controller;
import domain.Manufacturer;
import domain.Product;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import ui.components.table.model.ProductTableModel;

/**
 *
 * @author Dusan
 */
public class FProductSearch extends javax.swing.JDialog {

    
    /**
     * Creates new form FProductSearch
     */
    public FProductSearch(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        fillForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtblProducts = new javax.swing.JTable();
        jbtnDetails = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Search product...");

        jtblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Manufacturer", "Price", "Measurement unit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblProducts.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jtblProductsMouseDragged(evt);
            }
        });
        jtblProducts.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtblProductsFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(jtblProducts);

        jbtnDetails.setText("Details");
        jbtnDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnDetails)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDetailsActionPerformed
        // TODO add your handling code here:
       
 
         try{
              int row = jtblProducts.getSelectedRow();
         List<Product> products = Controller.getInstance().getAllProducts();
          Product product = products.get(row);
          new FProduct(ModeForm.VIEW, product).setVisible(true);
         }
         catch(Exception e){
        }
    }//GEN-LAST:event_jbtnDetailsActionPerformed

    private void jtblProductsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtblProductsFocusGained
        // TODO add your handling code here:
       ProductTableModel tmp = (ProductTableModel)jtblProducts.getModel();
        tmp.fireTableDataChanged();
    }//GEN-LAST:event_jtblProductsFocusGained

    private void jtblProductsMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblProductsMouseDragged
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jtblProductsMouseDragged

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnDetails;
    private javax.swing.JTable jtblProducts;
    // End of variables declaration//GEN-END:variables

    private void fillForm() {
        
        List<Product> products = Controller.getInstance().getAllProducts();
        TableModel tm = new ProductTableModel(products);
        jtblProducts.setModel(tm);
        
        List<Manufacturer> manufacturers = Controller.getInstance().getAllManufacturers();
        JComboBox comboManufacturers = new JComboBox(new DefaultComboBoxModel(manufacturers.toArray()));
        
        TableColumn tc = jtblProducts.getColumnModel().getColumn(2);
        tc.setCellEditor(new DefaultCellEditor(comboManufacturers));
        
        
        
        
//        DefaultTableModel dtm = (DefaultTableModel) jtblProducts.getModel();
//        for (Product product : products) {
//            Object[] data = new Object[5];
//            data[0] = product.getId();
//            data[1] = product.getName();
//            data[2] = product.getManufacturer();
//            data[3] = product.getPrice();
//            data[4] = product.getMeasurementUnit();
//            dtm.addRow(data);
//        }
    }
}
